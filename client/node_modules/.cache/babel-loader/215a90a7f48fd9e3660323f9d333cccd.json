{"ast":null,"code":"/*! cornerstone-math - 0.1.8 - 2019-01-16 | (c) 2017 Chris Hafey | https://github.com/cornerstonejs/cornerstoneMath */\n!function (t, e) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define(\"cornerstone-math\", [], e) : \"object\" == typeof exports ? exports[\"cornerstone-math\"] = e() : t.cornerstoneMath = e();\n}(window, function () {\n  return function (t) {\n    var e = {};\n\n    function i(n) {\n      if (e[n]) return e[n].exports;\n      var o = e[n] = {\n        i: n,\n        l: !1,\n        exports: {}\n      };\n      return t[n].call(o.exports, o, o.exports, i), o.l = !0, o.exports;\n    }\n\n    return i.m = t, i.c = e, i.d = function (t, e, n) {\n      i.o(t, e) || Object.defineProperty(t, e, {\n        configurable: !1,\n        enumerable: !0,\n        get: n\n      });\n    }, i.r = function (t) {\n      Object.defineProperty(t, \"__esModule\", {\n        value: !0\n      });\n    }, i.n = function (t) {\n      var e = t && t.__esModule ? function () {\n        return t.default;\n      } : function () {\n        return t;\n      };\n      return i.d(e, \"a\", e), e;\n    }, i.o = function (t, e) {\n      return Object.prototype.hasOwnProperty.call(t, e);\n    }, i.p = \"\", i(i.s = 9);\n  }([function (t, e, i) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    }), e.clamp = function (t, e, i) {\n      return t < e ? e : t > i ? i : t;\n    }, e.degToRad = function (t) {\n      return t * (Math.PI / 180);\n    }, e.radToDeg = function (t) {\n      return t * (180 / Math.PI);\n    }, e.sign = function (t) {\n      return \"number\" == typeof t ? t ? t < 0 ? -1 : 1 : t == t ? 0 : NaN : NaN;\n    };\n  }, function (t, e, i) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var n,\n        o = i(3),\n        s = (n = o) && n.__esModule ? n : {\n      default: n\n    },\n        r = i(0);\n\n    var a,\n        h,\n        u,\n        c,\n        l,\n        f = function (t, e, i) {\n      this.x = t || 0, this.y = e || 0, this.z = i || 0;\n    };\n\n    f.prototype = {\n      constructor: f,\n      set: function (t, e, i) {\n        return this.x = t, this.y = e, this.z = i, this;\n      },\n      setX: function (t) {\n        return this.x = t, this;\n      },\n      setY: function (t) {\n        return this.y = t, this;\n      },\n      setZ: function (t) {\n        return this.z = t, this;\n      },\n      setComponent: function (t, e) {\n        switch (t) {\n          case 0:\n            this.x = e;\n            break;\n\n          case 1:\n            this.y = e;\n            break;\n\n          case 2:\n            this.z = e;\n            break;\n\n          default:\n            throw new Error(\"index is out of range: \" + t);\n        }\n      },\n      getComponent: function (t) {\n        switch (t) {\n          case 0:\n            return this.x;\n\n          case 1:\n            return this.y;\n\n          case 2:\n            return this.z;\n\n          default:\n            throw new Error(\"index is out of range: \" + t);\n        }\n      },\n      copy: function (t) {\n        return this.x = t.x, this.y = t.y, this.z = t.z, this;\n      },\n      add: function (t, e) {\n        return void 0 !== e ? (console.warn(\"DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"), this.addVectors(t, e)) : (this.x += t.x, this.y += t.y, this.z += t.z, this);\n      },\n      addScalar: function (t) {\n        return this.x += t, this.y += t, this.z += t, this;\n      },\n      addVectors: function (t, e) {\n        return this.x = t.x + e.x, this.y = t.y + e.y, this.z = t.z + e.z, this;\n      },\n      sub: function (t, e) {\n        return void 0 !== e ? (console.warn(\"DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"), this.subVectors(t, e)) : (this.x -= t.x, this.y -= t.y, this.z -= t.z, this);\n      },\n      subVectors: function (t, e) {\n        return this.x = t.x - e.x, this.y = t.y - e.y, this.z = t.z - e.z, this;\n      },\n      multiply: function (t, e) {\n        return void 0 !== e ? (console.warn(\"DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"), this.multiplyVectors(t, e)) : (this.x *= t.x, this.y *= t.y, this.z *= t.z, this);\n      },\n      multiplyScalar: function (t) {\n        return this.x *= t, this.y *= t, this.z *= t, this;\n      },\n      multiplyVectors: function (t, e) {\n        return this.x = t.x * e.x, this.y = t.y * e.y, this.z = t.z * e.z, this;\n      },\n      applyAxisAngle: (l = void 0, function (t, e) {\n        return void 0 === l && (l = new s.default()), this.applyQuaternion(l.setFromAxisAngle(t.normalize(), e)), this;\n      }),\n      applyMatrix3: function (t) {\n        var e = this.x,\n            i = this.y,\n            n = this.z,\n            o = t.elements;\n        return this.x = o[0] * e + o[3] * i + o[6] * n, this.y = o[1] * e + o[4] * i + o[7] * n, this.z = o[2] * e + o[5] * i + o[8] * n, this;\n      },\n      applyMatrix4: function (t) {\n        var e = this.x,\n            i = this.y,\n            n = this.z,\n            o = t.elements;\n        return this.x = o[0] * e + o[4] * i + o[8] * n + o[12], this.y = o[1] * e + o[5] * i + o[9] * n + o[13], this.z = o[2] * e + o[6] * i + o[10] * n + o[14], this;\n      },\n      applyProjection: function (t) {\n        var e = this.x,\n            i = this.y,\n            n = this.z,\n            o = t.elements,\n            s = 1 / (o[3] * e + o[7] * i + o[11] * n + o[15]);\n        return this.x = (o[0] * e + o[4] * i + o[8] * n + o[12]) * s, this.y = (o[1] * e + o[5] * i + o[9] * n + o[13]) * s, this.z = (o[2] * e + o[6] * i + o[10] * n + o[14]) * s, this;\n      },\n      applyQuaternion: function (t) {\n        var e = this.x,\n            i = this.y,\n            n = this.z,\n            o = t.x,\n            s = t.y,\n            r = t.z,\n            a = t.w,\n            h = a * e + s * n - r * i,\n            u = a * i + r * e - o * n,\n            c = a * n + o * i - s * e,\n            l = -o * e - s * i - r * n;\n        return this.x = h * a + l * -o + u * -r - c * -s, this.y = u * a + l * -s + c * -o - h * -r, this.z = c * a + l * -r + h * -s - u * -o, this;\n      },\n      transformDirection: function (t) {\n        var e = this.x,\n            i = this.y,\n            n = this.z,\n            o = t.elements;\n        return this.x = o[0] * e + o[4] * i + o[8] * n, this.y = o[1] * e + o[5] * i + o[9] * n, this.z = o[2] * e + o[6] * i + o[10] * n, this.normalize(), this;\n      },\n      divide: function (t) {\n        return this.x /= t.x, this.y /= t.y, this.z /= t.z, this;\n      },\n      divideScalar: function (t) {\n        if (0 !== t) {\n          var e = 1 / t;\n          this.x *= e, this.y *= e, this.z *= e;\n        } else this.x = 0, this.y = 0, this.z = 0;\n\n        return this;\n      },\n      min: function (t) {\n        return this.x > t.x && (this.x = t.x), this.y > t.y && (this.y = t.y), this.z > t.z && (this.z = t.z), this;\n      },\n      max: function (t) {\n        return this.x < t.x && (this.x = t.x), this.y < t.y && (this.y = t.y), this.z < t.z && (this.z = t.z), this;\n      },\n      clamp: function (t, e) {\n        return this.x < t.x ? this.x = t.x : this.x > e.x && (this.x = e.x), this.y < t.y ? this.y = t.y : this.y > e.y && (this.y = e.y), this.z < t.z ? this.z = t.z : this.z > e.z && (this.z = e.z), this;\n      },\n      clampScalar: (u = void 0, c = void 0, function (t, e) {\n        return void 0 === u && (u = new f(), c = new f()), u.set(t, t, t), c.set(e, e, e), this.clamp(u, c);\n      }),\n      floor: function () {\n        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;\n      },\n      ceil: function () {\n        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;\n      },\n      round: function () {\n        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;\n      },\n      roundToZero: function () {\n        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;\n      },\n      negate: function () {\n        return this.multiplyScalar(-1);\n      },\n      dot: function (t) {\n        return this.x * t.x + this.y * t.y + this.z * t.z;\n      },\n      lengthSq: function () {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n      },\n      length: function () {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n      },\n      lengthManhattan: function () {\n        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n      },\n      normalize: function () {\n        return this.divideScalar(this.length());\n      },\n      setLength: function (t) {\n        var e = this.length();\n        return 0 !== e && t !== e && this.multiplyScalar(t / e), this;\n      },\n      lerp: function (t, e) {\n        return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this.z += (t.z - this.z) * e, this;\n      },\n      cross: function (t, e) {\n        if (void 0 !== e) return console.warn(\"DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"), this.crossVectors(t, e);\n        var i = this.x,\n            n = this.y,\n            o = this.z;\n        return this.x = n * t.z - o * t.y, this.y = o * t.x - i * t.z, this.z = i * t.y - n * t.x, this;\n      },\n      crossVectors: function (t, e) {\n        var i = t.x,\n            n = t.y,\n            o = t.z,\n            s = e.x,\n            r = e.y,\n            a = e.z;\n        return this.x = n * a - o * r, this.y = o * s - i * a, this.z = i * r - n * s, this;\n      },\n      projectOnVector: (a = void 0, h = void 0, function (t) {\n        return void 0 === a && (a = new f()), a.copy(t).normalize(), h = this.dot(a), this.copy(a).multiplyScalar(h);\n      }),\n      projectOnPlane: function () {\n        var t = void 0;\n        return function (e) {\n          return void 0 === t && (t = new f()), t.copy(this).projectOnVector(e), this.sub(t);\n        };\n      }(),\n      reflect: function () {\n        var t = void 0;\n        return function (e) {\n          return void 0 === t && (t = new f()), this.sub(t.copy(e).multiplyScalar(2 * this.dot(e)));\n        };\n      }(),\n      angleTo: function (t) {\n        var e = this.dot(t) / (this.length() * t.length());\n        return Math.acos((0, r.clamp)(e, -1, 1));\n      },\n      distanceTo: function (t) {\n        return Math.sqrt(this.distanceToSquared(t));\n      },\n      distanceToSquared: function (t) {\n        var e = this.x - t.x,\n            i = this.y - t.y,\n            n = this.z - t.z;\n        return e * e + i * i + n * n;\n      },\n      setFromMatrixPosition: function (t) {\n        return this.x = t.elements[12], this.y = t.elements[13], this.z = t.elements[14], this;\n      },\n      setFromMatrixScale: function (t) {\n        var e = this.set(t.elements[0], t.elements[1], t.elements[2]).length(),\n            i = this.set(t.elements[4], t.elements[5], t.elements[6]).length(),\n            n = this.set(t.elements[8], t.elements[9], t.elements[10]).length();\n        return this.x = e, this.y = i, this.z = n, this;\n      },\n      setFromMatrixColumn: function (t, e) {\n        var i = 4 * t,\n            n = e.elements;\n        return this.x = n[i], this.y = n[i + 1], this.z = n[i + 2], this;\n      },\n      equals: function (t) {\n        return t.x === this.x && t.y === this.y && t.z === this.z;\n      },\n      fromArray: function (t) {\n        return this.x = t[0], this.y = t[1], this.z = t[2], this;\n      },\n      toArray: function () {\n        return [this.x, this.y, this.z];\n      },\n      clone: function () {\n        return new f(this.x, this.y, this.z);\n      }\n    }, e.default = f;\n  }, function (t, e, i) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var n = i(0);\n\n    function o(t) {\n      return t * t;\n    }\n\n    function s(t, e) {\n      return o(t.x - e.x) + o(t.y - e.y);\n    }\n\n    var r = {\n      distanceToPoint: function (t, e) {\n        return Math.sqrt(function (t, e) {\n          var i = s(t.start, t.end);\n          if (0 === i) return s(e, t.start);\n          var n = ((e.x - t.start.x) * (t.end.x - t.start.x) + (e.y - t.start.y) * (t.end.y - t.start.y)) / i;\n          return s(e, n < 0 ? t.start : n > 1 ? t.end : {\n            x: t.start.x + n * (t.end.x - t.start.x),\n            y: t.start.y + n * (t.end.y - t.start.y)\n          });\n        }(t, e));\n      },\n      intersectLine: function (t, e) {\n        var i,\n            o,\n            s,\n            r,\n            a,\n            h,\n            u,\n            c,\n            l,\n            f,\n            y,\n            d = {},\n            p = t.start.x,\n            x = t.start.y,\n            m = t.end.x,\n            v = t.end.y,\n            g = e.start.x,\n            z = e.start.y,\n            b = e.end.x,\n            M = e.end.y,\n            w = void 0;\n\n        if (f = (i = v - x) * b + (s = p - m) * M + (a = m * x - p * v), (0 === (l = i * g + s * z + a) || 0 === f || (0, n.sign)(l) !== (0, n.sign)(f)) && (c = (o = M - z) * m + (r = g - b) * v + (h = b * z - g * M), 0 === (u = o * p + r * x + h) || 0 === c || (0, n.sign)(u) !== (0, n.sign)(c))) {\n          y = i * r - o * s, w = s * h - r * a;\n          var R = parseFloat(w / y);\n          w = o * a - i * h;\n          var P = parseFloat(w / y);\n          return d.x = R, d.y = P, d;\n        }\n      }\n    };\n    e.default = r;\n  }, function (t, e, i) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n\n    var n = function (t, e, i, n) {\n      this.x = t || 0, this.y = e || 0, this.z = i || 0, this.w = void 0 !== n ? n : 1;\n    };\n\n    n.prototype.setFromAxisAngle = function (t, e) {\n      var i = e / 2,\n          n = Math.sin(i);\n      return this.x = t.x * n, this.y = t.y * n, this.z = t.z * n, this.w = Math.cos(i), this;\n    }, n.prototype.multiplyQuaternions = function (t, e) {\n      var i = t.x,\n          n = t.y,\n          o = t.z,\n          s = t.w,\n          r = e.x,\n          a = e.y,\n          h = e.z,\n          u = e.w;\n      return this.x = i * u + s * r + n * h - o * a, this.y = n * u + s * a + o * r - i * h, this.z = o * u + s * h + i * a - n * r, this.w = s * u - i * r - n * a - o * h, this;\n    }, n.prototype.setFromRotationMatrix = function (t) {\n      var e = t.elements,\n          i = e[0],\n          n = e[4],\n          o = e[8],\n          s = e[1],\n          r = e[5],\n          a = e[9],\n          h = e[2],\n          u = e[6],\n          c = e[10],\n          l = i + r + c,\n          f = void 0;\n      return l > 0 ? (f = .5 / Math.sqrt(l + 1), this.w = .25 / f, this.x = (u - a) * f, this.y = (o - h) * f, this.z = (s - n) * f) : i > r && i > c ? (f = 2 * Math.sqrt(1 + i - r - c), this.w = (u - a) / f, this.x = .25 * f, this.y = (n + s) / f, this.z = (o + h) / f) : r > c ? (f = 2 * Math.sqrt(1 + r - i - c), this.w = (o - h) / f, this.x = (n + s) / f, this.y = .25 * f, this.z = (a + u) / f) : (f = 2 * Math.sqrt(1 + c - i - r), this.w = (s - n) / f, this.x = (o + h) / f, this.y = (a + u) / f, this.z = .25 * f), this;\n    }, e.default = n;\n  }, function (t, e, i) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var n,\n        o = i(2),\n        s = (n = o) && n.__esModule ? n : {\n      default: n\n    };\n\n    function r(t) {\n      return {\n        topLeft: {\n          x: t.left,\n          y: t.top\n        },\n        bottomRight: {\n          x: t.left + t.width,\n          y: t.top + t.height\n        }\n      };\n    }\n\n    var a = {\n      distanceToPoint: function (t, e) {\n        var i = 655535;\n        return function (t) {\n          return [{\n            start: {\n              x: t.left,\n              y: t.top\n            },\n            end: {\n              x: t.left + t.width,\n              y: t.top\n            }\n          }, {\n            start: {\n              x: t.left + t.width,\n              y: t.top\n            },\n            end: {\n              x: t.left + t.width,\n              y: t.top + t.height\n            }\n          }, {\n            start: {\n              x: t.left + t.width,\n              y: t.top + t.height\n            },\n            end: {\n              x: t.left,\n              y: t.top + t.height\n            }\n          }, {\n            start: {\n              x: t.left,\n              y: t.top + t.height\n            },\n            end: {\n              x: t.left,\n              y: t.top\n            }\n          }];\n        }(t).forEach(function (t) {\n          var n = s.default.distanceToPoint(t, e);\n          n < i && (i = n);\n        }), i;\n      },\n      getIntersectionRect: function (t, e) {\n        var i = {\n          topLeft: {},\n          bottomRight: {}\n        };\n\n        if (function (t, e) {\n          var i = void 0,\n              n = void 0,\n              o = r(t),\n              s = r(e);\n          return i = t.width >= 0 ? e.width >= 0 ? !(o.bottomRight.x <= s.topLeft.x || s.bottomRight.x <= o.topLeft.x) : !(o.bottomRight.x <= s.bottomRight.x || s.topLeft.x <= o.topLeft.x) : e.width >= 0 ? !(o.topLeft.x <= s.topLeft.x || s.bottomRight.x <= o.bottomRight.x) : !(o.topLeft.x <= s.bottomRight.x || s.topLeft.x <= o.bottomRight.x), n = t.height >= 0 ? e.height >= 0 ? !(o.bottomRight.y <= s.topLeft.y || s.bottomRight.y <= o.topLeft.y) : !(o.bottomRight.y <= s.bottomRight.y || s.topLeft.y <= o.topLeft.y) : e.height >= 0 ? !(o.topLeft.y <= s.topLeft.y || s.bottomRight.y <= o.bottomRight.y) : !(o.topLeft.y <= s.bottomRight.y || s.top <= o.bottomRight.y), i && n;\n        }(t, e)) {\n          var n = r(t),\n              o = r(e);\n          return t.width >= 0 ? e.width >= 0 ? (i.topLeft.x = Math.max(n.topLeft.x, o.topLeft.x), i.bottomRight.x = Math.min(n.bottomRight.x, o.bottomRight.x)) : (i.topLeft.x = Math.max(n.topLeft.x, o.bottomRight.x), i.bottomRight.x = Math.min(n.bottomRight.x, o.topLeft.x)) : e.width >= 0 ? (i.topLeft.x = Math.min(n.topLeft.x, o.bottomRight.x), i.bottomRight.x = Math.max(n.bottomRight.x, o.topLeft.x)) : (i.topLeft.x = Math.min(n.topLeft.x, o.topLeft.x), i.bottomRight.x = Math.max(n.bottomRight.x, o.bottomRight.x)), t.height >= 0 ? e.height >= 0 ? (i.topLeft.y = Math.max(n.topLeft.y, o.topLeft.y), i.bottomRight.y = Math.min(n.bottomRight.y, o.bottomRight.y)) : (i.topLeft.y = Math.max(n.topLeft.y, o.bottomRight.y), i.bottomRight.y = Math.min(n.bottomRight.y, o.topLeft.y)) : e.height >= 0 ? (i.topLeft.y = Math.min(n.topLeft.y, o.bottomRight.y), i.bottomRight.y = Math.max(n.bottomRight.y, o.topLeft.y)) : (i.topLeft.y = Math.min(n.topLeft.y, o.topLeft.y), i.bottomRight.y = Math.max(n.bottomRight.y, o.bottomRight.y)), i;\n        }\n      }\n    };\n    e.default = a;\n  }, function (t, e, i) {\n    \"use strict\";\n\n    function n(t, e) {\n      return {\n        x: t.x - e.x,\n        y: t.y - e.y\n      };\n    }\n\n    function o(t, e) {\n      return Math.sqrt(s(t, e));\n    }\n\n    function s(t, e) {\n      var i = n(t, e);\n      return i.x * i.x + i.y * i.y;\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var r = {\n      subtract: n,\n      copy: function (t) {\n        return {\n          x: t.x,\n          y: t.y\n        };\n      },\n      pageToPoint: function (t) {\n        return {\n          x: t.pageX,\n          y: t.pageY\n        };\n      },\n      distance: o,\n      distanceSquared: s,\n      insideRect: function (t, e) {\n        return !(t.x < e.left || t.x > e.left + e.width || t.y < e.top || t.y > e.top + e.height);\n      },\n      findClosestPoint: function (t, e) {\n        var i = [],\n            n = void 0;\n        return t.forEach(function (t, s) {\n          var r = o(t, e);\n          i.push(r), n = 0 === s ? r : Math.min(r, n);\n        }), t[i.indexOf(n)];\n      }\n    };\n    e.default = r;\n  }, function (t, e, i) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var n,\n        o = i(1),\n        s = (n = o) && n.__esModule ? n : {\n      default: n\n    };\n\n    var r,\n        a,\n        h = function (t, e) {\n      this.normal = void 0 !== t ? t : new s.default(1, 0, 0), this.constant = void 0 !== e ? e : 0;\n    };\n\n    h.prototype = {\n      constructor: h,\n      set: function (t, e) {\n        return this.normal.copy(t), this.constant = e, this;\n      },\n      setComponents: function (t, e, i, n) {\n        return this.normal.set(t, e, i), this.constant = n, this;\n      },\n      setFromNormalAndCoplanarPoint: function (t, e) {\n        return this.normal.copy(t), this.constant = -e.dot(this.normal), this;\n      },\n      setFromCoplanarPoints: (r = new s.default(), a = new s.default(), function (t, e, i) {\n        var n = r.subVectors(i, e).cross(a.subVectors(t, e)).normalize();\n        return this.setFromNormalAndCoplanarPoint(n, t), this;\n      }),\n      copy: function (t) {\n        return this.normal.copy(t.normal), this.constant = t.constant, this;\n      },\n      normalize: function () {\n        var t = 1 / this.normal.length();\n        return this.normal.multiplyScalar(t), this.constant *= t, this;\n      },\n      negate: function () {\n        return this.constant *= -1, this.normal.negate(), this;\n      },\n      distanceToPoint: function (t) {\n        return this.normal.dot(t) + this.constant;\n      },\n      distanceToSphere: function (t) {\n        return this.distanceToPoint(t.center) - t.radius;\n      },\n      projectPoint: function (t, e) {\n        return this.orthoPoint(t, e).sub(t).negate();\n      },\n      orthoPoint: function (t, e) {\n        var i = this.distanceToPoint(t);\n        return (e || new s.default()).copy(this.normal).multiplyScalar(i);\n      },\n      isIntersectionLine: function (t) {\n        var e = this.distanceToPoint(t.start),\n            i = this.distanceToPoint(t.end);\n        return e < 0 && i > 0 || i < 0 && e > 0;\n      },\n      intersectLine: function () {\n        var t = new s.default();\n        return function (e, i) {\n          var n = i || new s.default(),\n              o = e.delta(t),\n              r = this.normal.dot(o);\n          if (0 === r) return 0 === this.distanceToPoint(e.start) ? n.copy(e.start) : void 0;\n          var a = -(e.start.dot(this.normal) + this.constant) / r;\n          return a < 0 || a > 1 ? void 0 : n.copy(o).multiplyScalar(a).add(e.start);\n        };\n      }(),\n      intersectPlane: function (t) {\n        var e = this.normal.clone().cross(t.normal),\n            i = {\n          origin: new s.default(),\n          direction: e\n        };\n        if (this.normal.clone().cross(t.normal).length < 1e-10) return i.direction = new s.default(), i;\n        var n = this.constant,\n            o = t.constant,\n            r = this.normal.clone().dot(t.normal),\n            a = -(n - o * r) / (1 - r * r),\n            h = -(o - n * r) / (1 - r * r);\n        return i.origin = this.normal.clone().multiplyScalar(a).add(t.normal.clone().multiplyScalar(h)), i;\n      },\n      coplanarPoint: function (t) {\n        return (t || new s.default()).copy(this.normal).multiplyScalar(-this.constant);\n      },\n      translate: function (t) {\n        return this.constant = this.constant - t.dot(this.normal), this;\n      },\n      equals: function (t) {\n        return t.normal.equals(this.normal) && t.constant === this.constant;\n      },\n      clone: function () {\n        return new h().copy(this);\n      }\n    }, e.default = h;\n  }, function (t, e, i) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var n,\n        o = i(1),\n        s = (n = o) && n.__esModule ? n : {\n      default: n\n    };\n\n    var r = function (t, e, i, n, o, s, r, a, h, u, c, l, f, y, d, p) {\n      this.elements = new Float32Array(16);\n      var x = this.elements;\n      x[0] = void 0 !== t ? t : 1, x[4] = e || 0, x[8] = i || 0, x[12] = n || 0, x[1] = o || 0, x[5] = void 0 !== s ? s : 1, x[9] = r || 0, x[13] = a || 0, x[2] = h || 0, x[6] = u || 0, x[10] = void 0 !== c ? c : 1, x[14] = l || 0, x[3] = f || 0, x[7] = y || 0, x[11] = d || 0, x[15] = void 0 !== p ? p : 1;\n    };\n\n    r.prototype.makeRotationFromQuaternion = function (t) {\n      var e = this.elements,\n          i = t.x,\n          n = t.y,\n          o = t.z,\n          s = t.w,\n          r = i + i,\n          a = n + n,\n          h = o + o,\n          u = i * r,\n          c = i * a,\n          l = i * h,\n          f = n * a,\n          y = n * h,\n          d = o * h,\n          p = s * r,\n          x = s * a,\n          m = s * h;\n      return e[0] = 1 - (f + d), e[4] = c - m, e[8] = l + x, e[1] = c + m, e[5] = 1 - (u + d), e[9] = y - p, e[2] = l - x, e[6] = y + p, e[10] = 1 - (u + f), e[3] = 0, e[7] = 0, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, this;\n    }, r.prototype.multiplyMatrices = function (t, e) {\n      var i = t.elements,\n          n = e.elements,\n          o = this.elements,\n          s = i[0],\n          r = i[4],\n          a = i[8],\n          h = i[12],\n          u = i[1],\n          c = i[5],\n          l = i[9],\n          f = i[13],\n          y = i[2],\n          d = i[6],\n          p = i[10],\n          x = i[14],\n          m = i[3],\n          v = i[7],\n          g = i[11],\n          z = i[15],\n          b = n[0],\n          M = n[4],\n          w = n[8],\n          R = n[12],\n          P = n[1],\n          L = n[5],\n          T = n[9],\n          S = n[13],\n          _ = n[2],\n          V = n[6],\n          q = n[10],\n          j = n[14],\n          E = n[3],\n          k = n[7],\n          O = n[11],\n          A = n[15];\n      return o[0] = s * b + r * P + a * _ + h * E, o[4] = s * M + r * L + a * V + h * k, o[8] = s * w + r * T + a * q + h * O, o[12] = s * R + r * S + a * j + h * A, o[1] = u * b + c * P + l * _ + f * E, o[5] = u * M + c * L + l * V + f * k, o[9] = u * w + c * T + l * q + f * O, o[13] = u * R + c * S + l * j + f * A, o[2] = y * b + d * P + p * _ + x * E, o[6] = y * M + d * L + p * V + x * k, o[10] = y * w + d * T + p * q + x * O, o[14] = y * R + d * S + p * j + x * A, o[3] = m * b + v * P + g * _ + z * E, o[7] = m * M + v * L + g * V + z * k, o[11] = m * w + v * T + g * q + z * O, o[15] = m * R + v * S + g * j + z * A, this;\n    }, r.prototype.multiply = function (t, e) {\n      return void 0 !== e ? (console.warn(\"DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"), this.multiplyMatrices(t, e)) : this.multiplyMatrices(this, t);\n    }, r.prototype.getInverse = function (t, e) {\n      var i = this.elements,\n          n = t.elements,\n          o = n[0],\n          s = n[4],\n          r = n[8],\n          a = n[12],\n          h = n[1],\n          u = n[5],\n          c = n[9],\n          l = n[13],\n          f = n[2],\n          y = n[6],\n          d = n[10],\n          p = n[14],\n          x = n[3],\n          m = n[7],\n          v = n[11],\n          g = n[15];\n      i[0] = c * p * m - l * d * m + l * y * v - u * p * v - c * y * g + u * d * g, i[4] = a * d * m - r * p * m - a * y * v + s * p * v + r * y * g - s * d * g, i[8] = r * l * m - a * c * m + a * u * v - s * l * v - r * u * g + s * c * g, i[12] = a * c * y - r * l * y - a * u * d + s * l * d + r * u * p - s * c * p, i[1] = l * d * x - c * p * x - l * f * v + h * p * v + c * f * g - h * d * g, i[5] = r * p * x - a * d * x + a * f * v - o * p * v - r * f * g + o * d * g, i[9] = a * c * x - r * l * x - a * h * v + o * l * v + r * h * g - o * c * g, i[13] = r * l * f - a * c * f + a * h * d - o * l * d - r * h * p + o * c * p, i[2] = u * p * x - l * y * x + l * f * m - h * p * m - u * f * g + h * y * g, i[6] = a * y * x - s * p * x - a * f * m + o * p * m + s * f * g - o * y * g, i[10] = s * l * x - a * u * x + a * h * m - o * l * m - s * h * g + o * u * g, i[14] = a * u * f - s * l * f - a * h * y + o * l * y + s * h * p - o * u * p, i[3] = c * y * x - u * d * x - c * f * m + h * d * m + u * f * v - h * y * v, i[7] = s * d * x - r * y * x + r * f * m - o * d * m - s * f * v + o * y * v, i[11] = r * u * x - s * c * x - r * h * m + o * c * m + s * h * v - o * u * v, i[15] = s * c * f - r * u * f + r * h * y - o * c * y - s * h * d + o * u * d;\n      var z = o * i[0] + h * i[4] + f * i[8] + x * i[12];\n\n      if (0 === z) {\n        var b = \"Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n        if (e) throw new Error(b);\n        return console.warn(b), this.identity(), this;\n      }\n\n      return this.multiplyScalar(1 / z), this;\n    }, r.prototype.applyToVector3Array = function () {\n      var t = new s.default();\n      return function (e, i, n) {\n        void 0 === i && (i = 0), void 0 === n && (n = e.length);\n\n        for (var o = 0, s = i; o < n; o += 3, s += 3) t.x = e[s], t.y = e[s + 1], t.z = e[s + 2], t.applyMatrix4(this), e[s] = t.x, e[s + 1] = t.y, e[s + 2] = t.z;\n\n        return e;\n      };\n    }, r.prototype.makeTranslation = function (t, e, i) {\n      return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, i, 0, 0, 0, 1), this;\n    }, r.prototype.multiplyScalar = function (t) {\n      var e = this.elements;\n      return e[0] *= t, e[4] *= t, e[8] *= t, e[12] *= t, e[1] *= t, e[5] *= t, e[9] *= t, e[13] *= t, e[2] *= t, e[6] *= t, e[10] *= t, e[14] *= t, e[3] *= t, e[7] *= t, e[11] *= t, e[15] *= t, this;\n    }, r.prototype.set = function (t, e, i, n, o, s, r, a, h, u, c, l, f, y, d, p) {\n      var x = this.elements;\n      return x[0] = t, x[4] = e, x[8] = i, x[12] = n, x[1] = o, x[5] = s, x[9] = r, x[13] = a, x[2] = h, x[6] = u, x[10] = c, x[14] = l, x[3] = f, x[7] = y, x[11] = d, x[15] = p, this;\n    }, r.prototype.makeScale = function (t, e, i) {\n      return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, i, 0, 0, 0, 0, 1), this;\n    }, e.default = r;\n  }, function (t, e, i) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n\n    var n,\n        o = function () {\n      function t(t, e) {\n        for (var i = 0; i < e.length; i++) {\n          var n = e[i];\n          n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);\n        }\n      }\n\n      return function (e, i, n) {\n        return i && t(e.prototype, i), n && t(e, n), e;\n      };\n    }(),\n        s = i(1),\n        r = (n = s) && n.__esModule ? n : {\n      default: n\n    },\n        a = i(0);\n\n    var h = function () {\n      function t(e, i) {\n        !function (t, e) {\n          if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, t), this.start = void 0 !== e ? e : new r.default(), this.end = void 0 !== i ? i : new r.default();\n      }\n\n      return o(t, [{\n        key: \"set\",\n        value: function (t, e) {\n          return this.start.copy(t), this.end.copy(e), this;\n        }\n      }, {\n        key: \"copy\",\n        value: function (t) {\n          return this.start.copy(t.start), this.end.copy(t.end), this;\n        }\n      }, {\n        key: \"center\",\n        value: function (t) {\n          return (t || new r.default()).addVectors(this.start, this.end).multiplyScalar(.5);\n        }\n      }, {\n        key: \"delta\",\n        value: function (t) {\n          return (t || new r.default()).subVectors(this.end, this.start);\n        }\n      }, {\n        key: \"distanceSq\",\n        value: function () {\n          return this.start.distanceToSquared(this.end);\n        }\n      }, {\n        key: \"distance\",\n        value: function () {\n          return this.start.distanceTo(this.end);\n        }\n      }, {\n        key: \"at\",\n        value: function (t, e) {\n          var i = e || new r.default();\n          return this.delta(i).multiplyScalar(t).add(this.start);\n        }\n      }, {\n        key: \"closestPointToPointParameter\",\n        value: function (t, e) {\n          var i = new r.default(),\n              n = new r.default();\n          i.subVectors(t, this.start), n.subVectors(this.end, this.start);\n          var o = n.dot(n),\n              s = n.dot(i) / o;\n          return e && (s = (0, a.clamp)(s, 0, 1)), s;\n        }\n      }, {\n        key: \"closestPointToPoint\",\n        value: function (t, e, i) {\n          var n = this.closestPointToPointParameter(t, e),\n              o = i || new r.default();\n          return this.delta(o).multiplyScalar(n).add(this.start);\n        }\n      }, {\n        key: \"applyMatrix4\",\n        value: function (t) {\n          return this.start.applyMatrix4(t), this.end.applyMatrix4(t), this;\n        }\n      }, {\n        key: \"equals\",\n        value: function (t) {\n          return t.start.equals(this.start) && t.end.equals(this.end);\n        }\n      }, {\n        key: \"clone\",\n        value: function () {\n          return new t().copy(this);\n        }\n      }, {\n        key: \"intersectLine\",\n        value: function (t) {\n          var e = this.end.clone().sub(this.start),\n              i = t.end.clone().sub(t.start),\n              n = t.start.clone().sub(this.start),\n              o = e.clone().cross(i),\n              s = n.clone().cross(i);\n\n          if (0 !== n.dot(e)) {\n            var r = s.dot(o) / o.lengthSq();\n\n            if (!(r > 1 || isNaN(r))) {\n              var a = this.start.clone().add(e.clone().multiplyScalar(r));\n              return a.clone().sub(t.start).lengthSq() + a.clone().sub(t.end).lengthSq() <= t.distanceSq() ? a : void 0;\n            }\n          }\n        }\n      }]), t;\n    }();\n\n    e.default = h;\n  }, function (t, e, i) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    }), e.Vector3 = e.rect = e.quaternion = e.point = e.Plane = e.Matrix4 = e.sign = e.radToDeg = e.degToRad = e.clamp = e.lineSegment = e.Line3 = void 0;\n    var n = f(i(8)),\n        o = f(i(2)),\n        s = i(0),\n        r = f(i(7)),\n        a = f(i(6)),\n        h = f(i(5)),\n        u = f(i(3)),\n        c = f(i(4)),\n        l = f(i(1));\n\n    function f(t) {\n      return t && t.__esModule ? t : {\n        default: t\n      };\n    }\n\n    var y = {\n      Line3: n.default,\n      lineSegment: o.default,\n      clamp: s.clamp,\n      degToRad: s.degToRad,\n      radToDeg: s.radToDeg,\n      sign: s.sign,\n      Matrix4: r.default,\n      Plane: a.default,\n      point: h.default,\n      quaternion: u.default,\n      rect: c.default,\n      Vector3: l.default\n    };\n    e.Line3 = n.default, e.lineSegment = o.default, e.clamp = s.clamp, e.degToRad = s.degToRad, e.radToDeg = s.radToDeg, e.sign = s.sign, e.Matrix4 = r.default, e.Plane = a.default, e.point = h.default, e.quaternion = u.default, e.rect = c.default, e.Vector3 = l.default, e.default = y;\n  }]);\n});","map":{"version":3,"sources":["webpack://cornerstoneMath/webpack/universalModuleDefinition","webpack://cornerstoneMath/webpack/bootstrap","webpack://cornerstoneMath/math.js","webpack://cornerstoneMath/vector3.js","webpack://cornerstoneMath/lineSegment.js","webpack://cornerstoneMath/quaternion.js","webpack://cornerstoneMath/rect.js","webpack://cornerstoneMath/point.js","webpack://cornerstoneMath/plane.js","webpack://cornerstoneMath/matrix4.js","webpack://cornerstoneMath/Line3.js","webpack://cornerstoneMath/index.js"],"names":["module","define","exports","root","window","i","l","modules","__webpack_require__","Object","configurable","enumerable","get","value","x","a","b","degrees","Math","PI","radians","NaN","clamp","degToRad","radToDeg","sign","_math","Vector3","y","z","this","prototype","constructor","set","setX","setY","setZ","setComponent","index","Error","getComponent","copy","v","add","w","undefined","console","warn","addVectors","addScalar","s","sub","subVectors","multiply","multiplyVectors","multiplyScalar","scalar","applyAxisAngle","quaternion","axis","angle","applyQuaternion","setFromAxisAngle","normalize","applyMatrix3","m","e","elements","applyMatrix4","applyProjection","d","q","qx","qy","qz","qw","ix","iy","iz","iw","transformDirection","divide","divideScalar","invScalar","min","max","clampScalar","minVal","maxVal","floor","ceil","round","roundToZero","negate","dot","lengthSq","length","sqrt","lengthManhattan","abs","setLength","oldLength","lerp","alpha","cross","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","v1","vector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","acos","distanceTo","distanceToSquared","dx","dy","dz","setFromMatrixPosition","setFromMatrixScale","sx","sy","sz","setFromMatrixColumn","matrix","offset","me","equals","fromArray","array","toArray","clone","sqr","dist2","lineSegment","point","l2","start","end","t","distanceToPointSquared","lineSegment1","lineSegment2","intersectionPoint","x1","y1","x2","y2","x3","y3","x4","y4","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","num","parseFloat","distanceToPoint","intersectLine","Quaternion","halfAngle","sin","cos","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","setFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","rect","left","top","width","height","minDistance","rectToLineSegments","forEach","segment","distance","_lineSegment2","rectToPoints","topLeft","bottomRight","rect1","rect2","intersectLeftRight","intersectTopBottom","rect1Points","rect2Points","intersectRect","doesIntersect","getIntersectionRect","pageX","pageY","subtract","lhs","rhs","from","to","distanceSquared","delta","sources","target","distances","source","push","indexOf","pageToPoint","insideRect","findClosestPoint","Plane","constant","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","v2","c","plane","inverseNormalLength","distanceToSphere","sphere","center","radius","projectPoint","optionalTarget","orthoPoint","perpendicularMagnitude","isIntersectionLine","line","startSign","endSign","result","direction","denominator","intersectPlane","targetPlane","intersectionData","origin","h1","h2","n1dotn2","coplanarPoint","translate","Matrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","Float32Array","makeRotationFromQuaternion","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","multiplyMatrices","ae","be","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","n","getInverse","throwOnInvertible","det","msg","identity","applyToVector3Array","j","makeTranslation","makeScale","_vector","Line3","_classCallCheck","clampToLine","startP","startEnd","startEnd2","closestPointToPointParameter","da","db","dc","daCrossDb","dcCrossDb","isNaN","intersection","distanceSq","cornerstoneMath"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstone-math\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstone-math\"] = factory();\n\telse\n\t\troot[\"cornerstoneMath\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","// Based on THREE.JS\nfunction clamp (x, a, b) {\n  return (x < a) ? a : ((x > b) ? b : x);\n}\n\nfunction degToRad (degrees) {\n  const degreeToRadiansFactor = Math.PI / 180;\n\n\n  return degrees * degreeToRadiansFactor;\n}\n\nfunction radToDeg (radians) {\n  const radianToDegreesFactor = 180 / Math.PI;\n\n\n  return radians * radianToDegreesFactor;\n}\n\n// Returns sign of number\nfunction sign (x) {\n  return typeof x === 'number' ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\n\nexport {\n  clamp,\n  degToRad,\n  radToDeg,\n  sign\n};\n","import Quaternion from './quaternion.js';\nimport { clamp } from './math.js';\n\n// Based on THREE.JS\nconst Vector3 = function (x, y, z) {\n\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n\n};\n\nVector3.prototype = {\n\n  constructor: Vector3,\n\n  set (x, y, z) {\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n    return this;\n\n  },\n\n  setX (x) {\n\n    this.x = x;\n\n    return this;\n\n  },\n\n  setY (y) {\n\n    this.y = y;\n\n    return this;\n\n  },\n\n  setZ (z) {\n\n    this.z = z;\n\n    return this;\n\n  },\n\n  setComponent (index, value) {\n\n    switch (index) {\n\n    case 0: this.x = value; break;\n    case 1: this.y = value; break;\n    case 2: this.z = value; break;\n    default: throw new Error(`index is out of range: ${index}`);\n\n    }\n\n  },\n\n  getComponent (index) {\n\n    switch (index) {\n\n    case 0: return this.x;\n    case 1: return this.y;\n    case 2: return this.z;\n    default: throw new Error(`index is out of range: ${index}`);\n\n    }\n\n  },\n\n  copy (v) {\n\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n\n    return this;\n\n  },\n\n  add (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\n      return this.addVectors(v, w);\n\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n\n    return this;\n\n  },\n\n  addScalar (s) {\n\n    this.x += s;\n    this.y += s;\n    this.z += s;\n\n    return this;\n\n  },\n\n  addVectors (a, b) {\n\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n\n    return this;\n\n  },\n\n  sub (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\n      return this.subVectors(v, w);\n\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n\n    return this;\n\n  },\n\n  subVectors (a, b) {\n\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n\n    return this;\n\n  },\n\n  multiply (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n\n      return this.multiplyVectors(v, w);\n\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n\n    return this;\n\n  },\n\n  multiplyScalar (scalar) {\n\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n\n    return this;\n\n  },\n\n  multiplyVectors (a, b) {\n\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n\n    return this;\n\n  },\n\n\n  applyAxisAngle: (function () {\n\n    let quaternion;\n\n    return function (axis, angle) {\n\n      if (quaternion === undefined) {\n        quaternion = new Quaternion();\n      }\n\n      this.applyQuaternion(quaternion.setFromAxisAngle(axis.normalize(), angle));\n\n      return this;\n\n    };\n\n  })(),\n\n  applyMatrix3 (m) {\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n\n    const e = m.elements;\n\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n\n    return this;\n\n  },\n\n  applyMatrix4 (m) {\n\n    // Input: THREE.Matrix4 affine matrix\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    const e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n\n    return this;\n\n  },\n\n  applyProjection (m) {\n\n    // Input: THREE.Matrix4 projection matrix\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    const e = m.elements;\n    const d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]); // Perspective divide\n\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;\n\n    return this;\n\n  },\n\n  applyQuaternion (q) {\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n\n    const qx = q.x;\n    const qy = q.y;\n    const qz = q.z;\n    const qw = q.w;\n\n    // Calculate quat * vector\n\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n\n    // Calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n    return this;\n\n  },\n\n  transformDirection (m) {\n\n    // Input: THREE.Matrix4 affine matrix\n    // Vector interpreted as a direction\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    const e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n\n    this.normalize();\n\n    return this;\n\n  },\n\n  divide (v) {\n\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n\n    return this;\n\n  },\n\n  divideScalar (scalar) {\n\n    if (scalar !== 0) {\n\n      const invScalar = 1 / scalar;\n\n      this.x *= invScalar;\n      this.y *= invScalar;\n      this.z *= invScalar;\n\n    } else {\n\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n\n    }\n\n    return this;\n\n  },\n\n  min (v) {\n\n    if (this.x > v.x) {\n\n      this.x = v.x;\n\n    }\n\n    if (this.y > v.y) {\n\n      this.y = v.y;\n\n    }\n\n    if (this.z > v.z) {\n\n      this.z = v.z;\n\n    }\n\n    return this;\n\n  },\n\n  max (v) {\n\n    if (this.x < v.x) {\n\n      this.x = v.x;\n\n    }\n\n    if (this.y < v.y) {\n\n      this.y = v.y;\n\n    }\n\n    if (this.z < v.z) {\n\n      this.z = v.z;\n\n    }\n\n    return this;\n\n  },\n\n  clamp (min, max) {\n\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n    if (this.x < min.x) {\n\n      this.x = min.x;\n\n    } else if (this.x > max.x) {\n\n      this.x = max.x;\n\n    }\n\n    if (this.y < min.y) {\n\n      this.y = min.y;\n\n    } else if (this.y > max.y) {\n\n      this.y = max.y;\n\n    }\n\n    if (this.z < min.z) {\n\n      this.z = min.z;\n\n    } else if (this.z > max.z) {\n\n      this.z = max.z;\n\n    }\n\n    return this;\n\n  },\n\n  clampScalar: (function () {\n\n    let min, max;\n\n    return function (minVal, maxVal) {\n\n      if (min === undefined) {\n\n        min = new Vector3();\n        max = new Vector3();\n\n      }\n\n      min.set(minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal);\n\n      return this.clamp(min, max);\n\n    };\n\n  })(),\n\n  floor () {\n\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n\n    return this;\n\n  },\n\n  ceil () {\n\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n\n    return this;\n\n  },\n\n  round () {\n\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n\n    return this;\n\n  },\n\n  roundToZero () {\n\n    this.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = (this.z < 0) ? Math.ceil(this.z) : Math.floor(this.z);\n\n    return this;\n\n  },\n\n  negate () {\n\n    return this.multiplyScalar(-1);\n\n  },\n\n  dot (v) {\n\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n\n  },\n\n  lengthSq () {\n\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n\n  },\n\n  length () {\n\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\n  },\n\n  lengthManhattan () {\n\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n\n  },\n\n  normalize () {\n\n    return this.divideScalar(this.length());\n\n  },\n\n  setLength (l) {\n\n    const oldLength = this.length();\n\n    if (oldLength !== 0 && l !== oldLength) {\n\n      this.multiplyScalar(l / oldLength);\n    }\n\n    return this;\n\n  },\n\n  lerp (v, alpha) {\n\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n\n    return this;\n\n  },\n\n  cross (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n\n      return this.crossVectors(v, w);\n\n    }\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n\n    return this;\n\n  },\n\n  crossVectors (a, b) {\n\n    let ax = a.x,\n      ay = a.y,\n      az = a.z;\n    let bx = b.x,\n      by = b.y,\n      bz = b.z;\n\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n\n    return this;\n\n  },\n\n  projectOnVector: (function () {\n\n    let v1, dot;\n\n    return function (vector) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      v1.copy(vector).normalize();\n\n      dot = this.dot(v1);\n\n      return this.copy(v1).multiplyScalar(dot);\n\n    };\n\n  })(),\n\n  projectOnPlane: (function () {\n\n    let v1;\n\n    return function (planeNormal) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      v1.copy(this).projectOnVector(planeNormal);\n\n      return this.sub(v1);\n\n    };\n\n  })(),\n\n  reflect: (function () {\n\n    // Reflect incident vector off plane orthogonal to normal\n    // Normal is assumed to have unit length\n\n    let v1;\n\n    return function (normal) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n\n    };\n\n  })(),\n\n  angleTo (v) {\n\n    const theta = this.dot(v) / (this.length() * v.length());\n\n    // Clamp, to handle numerical problems\n\n    return Math.acos(clamp(theta, -1, 1));\n\n  },\n\n  distanceTo (v) {\n\n    return Math.sqrt(this.distanceToSquared(v));\n\n  },\n\n  distanceToSquared (v) {\n\n    const dx = this.x - v.x;\n    const dy = this.y - v.y;\n    const dz = this.z - v.z;\n\n    return dx * dx + dy * dy + dz * dz;\n\n  },\n\n  setFromMatrixPosition (m) {\n\n    this.x = m.elements[12];\n    this.y = m.elements[13];\n    this.z = m.elements[14];\n\n    return this;\n\n  },\n\n  setFromMatrixScale (m) {\n\n    const sx = this.set(m.elements[0], m.elements[1], m.elements[2]).length();\n    const sy = this.set(m.elements[4], m.elements[5], m.elements[6]).length();\n    const sz = this.set(m.elements[8], m.elements[9], m.elements[10]).length();\n\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n\n    return this;\n  },\n\n  setFromMatrixColumn (index, matrix) {\n\n    const offset = index * 4;\n\n    const me = matrix.elements;\n\n    this.x = me[offset];\n    this.y = me[offset + 1];\n    this.z = me[offset + 2];\n\n    return this;\n\n  },\n\n  equals (v) {\n\n    return ((v.x === this.x) && (v.y === this.y) && (v.z === this.z));\n\n  },\n\n  fromArray (array) {\n\n    this.x = array[0];\n    this.y = array[1];\n    this.z = array[2];\n\n    return this;\n\n  },\n\n  toArray () {\n\n    return [this.x, this.y, this.z];\n\n  },\n\n  clone () {\n\n    return new Vector3(this.x, this.y, this.z);\n\n  }\n\n};\n\nexport default Vector3;\n","import { sign } from './math.js';\n\n// Based on  http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment\nfunction sqr (x) {\n  return x * x;\n}\n\nfunction dist2 (v, w) {\n  return sqr(v.x - w.x) + sqr(v.y - w.y);\n}\n\nfunction distanceToPointSquared (lineSegment, point) {\n  const l2 = dist2(lineSegment.start, lineSegment.end);\n\n  if(l2 === 0) {\n    return dist2(point, lineSegment.start);\n  }\n  const t = ((point.x - lineSegment.start.x) * (lineSegment.end.x - lineSegment.start.x) +\n        (point.y - lineSegment.start.y) * (lineSegment.end.y - lineSegment.start.y)) / l2;\n\n  if(t < 0) {\n    return dist2(point, lineSegment.start);\n  }\n  if(t > 1) {\n    return dist2(point, lineSegment.end);\n  }\n\n  const pt = {\n    x: lineSegment.start.x + t * (lineSegment.end.x - lineSegment.start.x),\n    y: lineSegment.start.y + t * (lineSegment.end.y - lineSegment.start.y)\n  };\n\n\n  return dist2(point, pt);\n}\n\nfunction distanceToPoint (lineSegment, point) {\n  return Math.sqrt(distanceToPointSquared(lineSegment, point));\n}\n\n// Returns intersection points of two lines\nfunction intersectLine (lineSegment1, lineSegment2) {\n  const intersectionPoint = {};\n\n  let x1 = lineSegment1.start.x,\n    y1 = lineSegment1.start.y,\n    x2 = lineSegment1.end.x,\n    y2 = lineSegment1.end.y,\n    x3 = lineSegment2.start.x,\n    y3 = lineSegment2.start.y,\n    x4 = lineSegment2.end.x,\n    y4 = lineSegment2.end.y;\n\n  // Coefficients of line equations\n  let a1, a2, b1, b2, c1, c2;\n  // Sign values\n  let r1, r2, r3, r4;\n\n  // Intermediate values\n  let denom, num;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is \"a1 x  +  b1 y  +  c1  =  0\"\n  a1 = y2 - y1;\n  b1 = x1 - x2;\n  c1 = x2 * y1 - x1 * y2;\n\n  // Compute r3 and r4\n  r3 = a1 * x3 + b1 * y3 + c1;\n  r4 = a1 * x4 + b1 * y4 + c1;\n\n  /* Check signs of r3 and r4.  If both point 3 and point 4 lie on\n    * same side of line 1, the line segments do not intersect.\n    */\n\n  if (r3 !== 0 &&\n        r4 !== 0 &&\n        sign(r3) === sign(r4)) {\n    return;\n  }\n\n  // Compute a2, b2, c2\n  a2 = y4 - y3;\n  b2 = x3 - x4;\n  c2 = x4 * y3 - x3 * y4;\n\n  // Compute r1 and r2\n  r1 = a2 * x1 + b2 * y1 + c2;\n  r2 = a2 * x2 + b2 * y2 + c2;\n\n  /* Check signs of r1 and r2.  If both point 1 and point 2 lie\n    * on same side of second line segment, the line segments do\n    * not intersect.\n    */\n\n  if (r1 !== 0 &&\n        r2 !== 0 &&\n        sign(r1) === sign(r2)) {\n    return;\n  }\n\n  /* Line segments intersect: compute intersection point.\n    */\n\n  denom = (a1 * b2) - (a2 * b1);\n\n  /* The denom/2 is to get rounding instead of truncating.  It\n    * is added or subtracted to the numerator, depending upon the\n    * sign of the numerator.\n    */\n\n  num = (b1 * c2) - (b2 * c1);\n  const x = parseFloat(num / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  const y = parseFloat(num / denom);\n\n  intersectionPoint.x = x;\n  intersectionPoint.y = y;\n\n  return intersectionPoint;\n}\n\n// Module exports\nconst lineSegment = {\n  distanceToPoint,\n  intersectLine\n};\n\nexport default lineSegment;\n","const Quaternion = function Quaternion (x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = (w !== undefined) ? w : 1;\n};\n\nQuaternion.prototype.setFromAxisAngle = function (axis, angle) {\n  let halfAngle = angle / 2,\n    s = Math.sin(halfAngle);\n\n  this.x = axis.x * s;\n  this.y = axis.y * s;\n  this.z = axis.z * s;\n  this.w = Math.cos(halfAngle);\n\n  return this;\n};\n\nQuaternion.prototype.multiplyQuaternions = function (a, b) {\n  let qax = a.x,\n    qay = a.y,\n    qaz = a.z,\n    qaw = a.w;\n  let qbx = b.x,\n    qby = b.y,\n    qbz = b.z,\n    qbw = b.w;\n\n  this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n  this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n  this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n  this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n  return this;\n};\n\nQuaternion.prototype.setFromRotationMatrix = function (m) {\n  let te = m.elements,\n\n    m11 = te[0],\n    m12 = te[4],\n    m13 = te[8],\n    m21 = te[1],\n    m22 = te[5],\n    m23 = te[9],\n    m31 = te[2],\n    m32 = te[6],\n    m33 = te[10],\n\n    trace = m11 + m22 + m33,\n    s;\n\n  if (trace > 0) {\n\n    s = 0.5 / Math.sqrt(trace + 1.0);\n\n    this.w = 0.25 / s;\n    this.x = (m32 - m23) * s;\n    this.y = (m13 - m31) * s;\n    this.z = (m21 - m12) * s;\n\n  } else if (m11 > m22 && m11 > m33) {\n\n    s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n    this.w = (m32 - m23) / s;\n    this.x = 0.25 * s;\n    this.y = (m12 + m21) / s;\n    this.z = (m13 + m31) / s;\n\n  } else if (m22 > m33) {\n\n    s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n    this.w = (m13 - m31) / s;\n    this.x = (m12 + m21) / s;\n    this.y = 0.25 * s;\n    this.z = (m23 + m32) / s;\n\n  } else {\n\n    s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n    this.w = (m21 - m12) / s;\n    this.x = (m13 + m31) / s;\n    this.y = (m23 + m32) / s;\n    this.z = 0.25 * s;\n\n  }\n\n  return this;\n};\n\nexport default Quaternion;\n","import lineSegment from './lineSegment.js';\n\nfunction rectToLineSegments (rect) {\n  const top = {\n    start: {\n      x: rect.left,\n      y: rect.top\n    },\n    end: {\n      x: rect.left + rect.width,\n      y: rect.top\n\n    }\n  };\n  const right = {\n    start: {\n      x: rect.left + rect.width,\n      y: rect.top\n    },\n    end: {\n      x: rect.left + rect.width,\n      y: rect.top + rect.height\n\n    }\n  };\n  const bottom = {\n    start: {\n      x: rect.left + rect.width,\n      y: rect.top + rect.height\n    },\n    end: {\n      x: rect.left,\n      y: rect.top + rect.height\n\n    }\n  };\n  const left = {\n    start: {\n      x: rect.left,\n      y: rect.top + rect.height\n    },\n    end: {\n      x: rect.left,\n      y: rect.top\n\n    }\n  };\n  const lineSegments = [top, right, bottom, left];\n\n\n  return lineSegments;\n}\n\nfunction distanceToPoint (rect, point) {\n  let minDistance = 655535;\n  const lineSegments = rectToLineSegments(rect);\n\n  lineSegments.forEach(function (segment) {\n    const distance = lineSegment.distanceToPoint(segment, point);\n\n    if(distance < minDistance) {\n      minDistance = distance;\n    }\n  });\n\n  return minDistance;\n}\n\n// Returns top-left and bottom-right points of the rectangle\nfunction rectToPoints (rect) {\n  const rectPoints = {\n    topLeft: {\n      x: rect.left,\n      y: rect.top\n    },\n    bottomRight: {\n      x: rect.left + rect.width,\n      y: rect.top + rect.height\n    }\n  };\n\n  return rectPoints;\n}\n\n// Returns whether two non-rotated rectangles are intersected\nfunction doesIntersect (rect1, rect2) {\n  let intersectLeftRight;\n  let intersectTopBottom;\n\n  const rect1Points = rectToPoints(rect1);\n  const rect2Points = rectToPoints(rect2);\n\n  if (rect1.width >= 0) {\n    if (rect2.width >= 0) {\n      intersectLeftRight = !((rect1Points.bottomRight.x <= rect2Points.topLeft.x) || (rect2Points.bottomRight.x <= rect1Points.topLeft.x));\n    } else {\n      intersectLeftRight = !((rect1Points.bottomRight.x <= rect2Points.bottomRight.x) || (rect2Points.topLeft.x <= rect1Points.topLeft.x));\n    }\n  } else if (rect2.width >= 0) {\n    intersectLeftRight = !((rect1Points.topLeft.x <= rect2Points.topLeft.x) || (rect2Points.bottomRight.x <= rect1Points.bottomRight.x));\n  } else {\n    intersectLeftRight = !((rect1Points.topLeft.x <= rect2Points.bottomRight.x) || (rect2Points.topLeft.x <= rect1Points.bottomRight.x));\n  }\n\n  if (rect1.height >= 0) {\n    if (rect2.height >= 0) {\n      intersectTopBottom = !((rect1Points.bottomRight.y <= rect2Points.topLeft.y) || (rect2Points.bottomRight.y <= rect1Points.topLeft.y));\n    } else {\n      intersectTopBottom = !((rect1Points.bottomRight.y <= rect2Points.bottomRight.y) || (rect2Points.topLeft.y <= rect1Points.topLeft.y));\n    }\n  } else if (rect2.height >= 0) {\n    intersectTopBottom = !((rect1Points.topLeft.y <= rect2Points.topLeft.y) || (rect2Points.bottomRight.y <= rect1Points.bottomRight.y));\n  } else {\n    intersectTopBottom = !((rect1Points.topLeft.y <= rect2Points.bottomRight.y) || (rect2Points.top <= rect1Points.bottomRight.y));\n  }\n\n  return intersectLeftRight && intersectTopBottom;\n}\n\n// Returns intersection points of two non-rotated rectangles\nfunction getIntersectionRect (rect1, rect2) {\n  const intersectRect = {\n    topLeft: {},\n    bottomRight: {}\n  };\n\n  if (!doesIntersect(rect1, rect2)) {\n    return;\n  }\n\n  const rect1Points = rectToPoints(rect1);\n  const rect2Points = rectToPoints(rect2);\n\n  if (rect1.width >= 0) {\n    if (rect2.width >= 0) {\n      intersectRect.topLeft.x = Math.max(rect1Points.topLeft.x, rect2Points.topLeft.x);\n      intersectRect.bottomRight.x = Math.min(rect1Points.bottomRight.x, rect2Points.bottomRight.x);\n    } else {\n      intersectRect.topLeft.x = Math.max(rect1Points.topLeft.x, rect2Points.bottomRight.x);\n      intersectRect.bottomRight.x = Math.min(rect1Points.bottomRight.x, rect2Points.topLeft.x);\n    }\n  } else if (rect2.width >= 0) {\n    intersectRect.topLeft.x = Math.min(rect1Points.topLeft.x, rect2Points.bottomRight.x);\n    intersectRect.bottomRight.x = Math.max(rect1Points.bottomRight.x, rect2Points.topLeft.x);\n  } else {\n    intersectRect.topLeft.x = Math.min(rect1Points.topLeft.x, rect2Points.topLeft.x);\n    intersectRect.bottomRight.x = Math.max(rect1Points.bottomRight.x, rect2Points.bottomRight.x);\n  }\n\n  if (rect1.height >= 0) {\n    if (rect2.height >= 0) {\n      intersectRect.topLeft.y = Math.max(rect1Points.topLeft.y, rect2Points.topLeft.y);\n      intersectRect.bottomRight.y = Math.min(rect1Points.bottomRight.y, rect2Points.bottomRight.y);\n    } else {\n      intersectRect.topLeft.y = Math.max(rect1Points.topLeft.y, rect2Points.bottomRight.y);\n      intersectRect.bottomRight.y = Math.min(rect1Points.bottomRight.y, rect2Points.topLeft.y);\n    }\n  } else if (rect2.height >= 0) {\n    intersectRect.topLeft.y = Math.min(rect1Points.topLeft.y, rect2Points.bottomRight.y);\n    intersectRect.bottomRight.y = Math.max(rect1Points.bottomRight.y, rect2Points.topLeft.y);\n  } else {\n    intersectRect.topLeft.y = Math.min(rect1Points.topLeft.y, rect2Points.topLeft.y);\n    intersectRect.bottomRight.y = Math.max(rect1Points.bottomRight.y, rect2Points.bottomRight.y);\n  }\n\n  // Returns top-left and bottom-right points of intersected rectangle\n  return intersectRect;\n\n}\n\nconst rect = {\n  distanceToPoint,\n  getIntersectionRect\n};\n\nexport default rect;\n","function pageToPoint (e) {\n  return {\n    x: e.pageX,\n    y: e.pageY\n  };\n}\n\nfunction subtract (lhs, rhs) {\n  return {\n    x: lhs.x - rhs.x,\n    y: lhs.y - rhs.y\n  };\n}\n\nfunction copy (point) {\n  return {\n    x: point.x,\n    y: point.y\n  };\n}\n\nfunction distance (from, to) {\n  return Math.sqrt(distanceSquared(from, to));\n}\n\nfunction distanceSquared (from, to) {\n  const delta = subtract(from, to);\n\n\n  return delta.x * delta.x + delta.y * delta.y;\n}\n\nfunction insideRect (point, rect) {\n  if(point.x < rect.left ||\n        point.x > rect.left + rect.width ||\n        point.y < rect.top ||\n        point.y > rect.top + rect.height) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Returns the closest source point to a target point\n * given an array of source points.\n *\n * @param sources An Array of source Points\n * @param target The target Point\n * @returns Point The closest point from the points array\n */\nfunction findClosestPoint (sources, target) {\n  const distances = [];\n  let minDistance;\n\n  sources.forEach(function (source, index) {\n    const d = distance(source, target);\n\n    distances.push(d);\n\n    if (index === 0) {\n      minDistance = d;\n    } else {\n      minDistance = Math.min(d, minDistance);\n    }\n  });\n\n  const index = distances.indexOf(minDistance);\n\n\n  return sources[index];\n}\n\nconst point = {\n  subtract,\n  copy,\n  pageToPoint,\n  distance,\n  distanceSquared,\n  insideRect,\n  findClosestPoint\n};\n\nexport default point;\n","import Vector3 from './vector3.js';\n\n// Copied from Three.JS\n/**\n * @author bhouston / http://exocortex.com\n */\n\nconst Plane = function (normal, constant) {\n\n  this.normal = (normal !== undefined) ? normal : new Vector3(1, 0, 0);\n  this.constant = (constant !== undefined) ? constant : 0;\n\n};\n\nPlane.prototype = {\n\n  constructor: Plane,\n\n  set (normal, constant) {\n\n    this.normal.copy(normal);\n    this.constant = constant;\n\n    return this;\n\n  },\n\n  setComponents (x, y, z, w) {\n\n    this.normal.set(x, y, z);\n    this.constant = w;\n\n    return this;\n\n  },\n\n  setFromNormalAndCoplanarPoint (normal, point) {\n\n    this.normal.copy(normal);\n    // Must be this.normal, not normal, as this.normal is normalized\n    this.constant = -point.dot(this.normal);\n\n    return this;\n\n  },\n\n  setFromCoplanarPoints: (function () {\n\n    const v1 = new Vector3();\n    const v2 = new Vector3();\n\n    return function (a, b, c) {\n\n      const normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize();\n\n      // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n\n      return this;\n\n    };\n\n  })(),\n\n\n  copy (plane) {\n\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n\n    return this;\n\n  },\n\n  normalize () {\n\n    // Note: will lead to a divide by zero if the plane is invalid.\n\n    const inverseNormalLength = 1.0 / this.normal.length();\n\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n\n    return this;\n\n  },\n\n  negate () {\n\n    this.constant *= -1;\n    this.normal.negate();\n\n    return this;\n\n  },\n\n  distanceToPoint (point) {\n\n    return this.normal.dot(point) + this.constant;\n\n  },\n\n  distanceToSphere (sphere) {\n\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n\n  },\n\n  projectPoint (point, optionalTarget) {\n\n    return this.orthoPoint(point, optionalTarget).sub(point).negate();\n\n  },\n\n  orthoPoint (point, optionalTarget) {\n\n    const perpendicularMagnitude = this.distanceToPoint(point);\n\n    const result = optionalTarget || new Vector3();\n\n\n    return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\n\n  },\n\n  isIntersectionLine (line) {\n\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n    const startSign = this.distanceToPoint(line.start);\n    const endSign = this.distanceToPoint(line.end);\n\n    return (startSign < 0 && endSign > 0) || (endSign < 0 && startSign > 0);\n\n  },\n\n  intersectLine: (function () {\n\n    const v1 = new Vector3();\n\n    return function (line, optionalTarget) {\n\n      const result = optionalTarget || new Vector3();\n\n      const direction = line.delta(v1);\n\n      const denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n\n        // Line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n\n          return result.copy(line.start);\n\n        }\n\n        // Unsure if this is the correct method to handle this case.\n        return undefined;\n\n      }\n\n      const t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n\n        return undefined;\n\n      }\n\n      return result.copy(direction).multiplyScalar(t).add(line.start);\n\n    };\n\n  })(),\n\n  intersectPlane (targetPlane) {\n    // Returns the intersection line between two planes\n    const direction = this.normal.clone().cross(targetPlane.normal);\n    const origin = new Vector3();\n    const intersectionData = {\n      origin,\n      direction\n    };\n\n    // If the planes are parallel, return an empty vector for the intersection line\n    if (this.normal.clone().cross(targetPlane.normal).length < 1e-10) {\n      intersectionData.direction = new Vector3();\n\n      return intersectionData;\n    }\n\n    const h1 = this.constant;\n    const h2 = targetPlane.constant;\n    const n1dotn2 = this.normal.clone().dot(targetPlane.normal);\n\n    const c1 = -(h1 - h2 * n1dotn2) / (1 - n1dotn2 * n1dotn2);\n    const c2 = -(h2 - h1 * n1dotn2) / (1 - n1dotn2 * n1dotn2);\n\n    intersectionData.origin = this.normal.clone().multiplyScalar(c1).add(targetPlane.normal.clone().multiplyScalar(c2));\n\n    return intersectionData;\n  },\n\n  coplanarPoint (optionalTarget) {\n\n    const result = optionalTarget || new Vector3();\n\n\n    return result.copy(this.normal).multiplyScalar(-this.constant);\n\n  },\n\n  translate (offset) {\n\n    this.constant = this.constant - offset.dot(this.normal);\n\n    return this;\n\n  },\n\n  equals (plane) {\n\n    return plane.normal.equals(this.normal) && (plane.constant === this.constant);\n\n  },\n\n  clone () {\n\n    return new Plane().copy(this);\n\n  }\n};\n\nexport default Plane;\n","import Vector3 from './vector3.js';\n\n// Based on THREE.JS\nconst Matrix4 = function Matrix4 (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n  this.elements = new Float32Array(16);\n\n  // TODO: if n11 is undefined, then just set to identity, otherwise copy all other values into matrix\n  // We should not support semi specification of Matrix4, it is just weird.\n\n  const te = this.elements;\n\n  te[0] = (n11 !== undefined) ? n11 : 1; te[4] = n12 || 0; te[8] = n13 || 0; te[12] = n14 || 0;\n  te[1] = n21 || 0; te[5] = (n22 !== undefined) ? n22 : 1; te[9] = n23 || 0; te[13] = n24 || 0;\n  te[2] = n31 || 0; te[6] = n32 || 0; te[10] = (n33 !== undefined) ? n33 : 1; te[14] = n34 || 0;\n  te[3] = n41 || 0; te[7] = n42 || 0; te[11] = n43 || 0; te[15] = (n44 !== undefined) ? n44 : 1;\n};\n\nMatrix4.prototype.makeRotationFromQuaternion = function (q) {\n  const te = this.elements;\n\n  let x = q.x,\n    y = q.y,\n    z = q.z,\n    w = q.w;\n  let x2 = x + x,\n    y2 = y + y,\n    z2 = z + z;\n  let xx = x * x2,\n    xy = x * y2,\n    xz = x * z2;\n  let yy = y * y2,\n    yz = y * z2,\n    zz = z * z2;\n  let wx = w * x2,\n    wy = w * y2,\n    wz = w * z2;\n\n  te[0] = 1 - (yy + zz);\n  te[4] = xy - wz;\n  te[8] = xz + wy;\n\n  te[1] = xy + wz;\n  te[5] = 1 - (xx + zz);\n  te[9] = yz - wx;\n\n  te[2] = xz - wy;\n  te[6] = yz + wx;\n  te[10] = 1 - (xx + yy);\n\n  // Last column\n  te[3] = 0;\n  te[7] = 0;\n  te[11] = 0;\n\n  // Bottom row\n  te[12] = 0;\n  te[13] = 0;\n  te[14] = 0;\n  te[15] = 1;\n\n  return this;\n};\n\nMatrix4.prototype.multiplyMatrices = function (a, b) {\n  const ae = a.elements;\n  const be = b.elements;\n  const te = this.elements;\n\n  let a11 = ae[0],\n    a12 = ae[4],\n    a13 = ae[8],\n    a14 = ae[12];\n  let a21 = ae[1],\n    a22 = ae[5],\n    a23 = ae[9],\n    a24 = ae[13];\n  let a31 = ae[2],\n    a32 = ae[6],\n    a33 = ae[10],\n    a34 = ae[14];\n  let a41 = ae[3],\n    a42 = ae[7],\n    a43 = ae[11],\n    a44 = ae[15];\n\n  let b11 = be[0],\n    b12 = be[4],\n    b13 = be[8],\n    b14 = be[12];\n  let b21 = be[1],\n    b22 = be[5],\n    b23 = be[9],\n    b24 = be[13];\n  let b31 = be[2],\n    b32 = be[6],\n    b33 = be[10],\n    b34 = be[14];\n  let b41 = be[3],\n    b42 = be[7],\n    b43 = be[11],\n    b44 = be[15];\n\n  te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n  te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n  te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n  te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n  te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n  te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n  te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n  te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n  te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n  te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n  te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n  te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n  te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n  te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n  te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n  te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n  return this;\n};\n\nMatrix4.prototype.multiply = function (m, n) {\n\n  if (n !== undefined) {\n\n    console.warn('DEPRECATED: Matrix4\\'s .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n\n    return this.multiplyMatrices(m, n);\n  }\n\n  return this.multiplyMatrices(this, m);\n};\n\nMatrix4.prototype.getInverse = function (m, throwOnInvertible) {\n\n  // Based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n  const te = this.elements;\n  const me = m.elements;\n\n  let n11 = me[0],\n    n12 = me[4],\n    n13 = me[8],\n    n14 = me[12];\n  let n21 = me[1],\n    n22 = me[5],\n    n23 = me[9],\n    n24 = me[13];\n  let n31 = me[2],\n    n32 = me[6],\n    n33 = me[10],\n    n34 = me[14];\n  let n41 = me[3],\n    n42 = me[7],\n    n43 = me[11],\n    n44 = me[15];\n\n  te[0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\n  te[4] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\n  te[8] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\n  te[12] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n  te[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\n  te[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\n  te[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\n  te[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\n  te[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\n  te[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\n  te[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\n  te[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\n  te[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\n  te[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\n  te[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\n  te[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\n\n  const det = n11 * te[0] + n21 * te[4] + n31 * te[8] + n41 * te[12];\n\n  if (det === 0) {\n\n    const msg = 'Matrix4.getInverse(): can\\'t invert matrix, determinant is 0';\n\n    if (throwOnInvertible || false) {\n\n      throw new Error(msg);\n\n    } else {\n\n      console.warn(msg);\n\n    }\n\n    this.identity();\n\n    return this;\n  }\n\n  this.multiplyScalar(1 / det);\n\n  return this;\n\n};\n\nMatrix4.prototype.applyToVector3Array = function () {\n\n  const v1 = new Vector3();\n\n  return function (array, offset, length) {\n\n    if (offset === undefined) {\n      offset = 0;\n    }\n    if (length === undefined) {\n      length = array.length;\n    }\n\n    for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n\n      v1.x = array[j];\n      v1.y = array[j + 1];\n      v1.z = array[j + 2];\n\n      v1.applyMatrix4(this);\n\n      array[j] = v1.x;\n      array[j + 1] = v1.y;\n      array[j + 2] = v1.z;\n\n    }\n\n    return array;\n\n  };\n\n};\n\nMatrix4.prototype.makeTranslation = function (x, y, z) {\n\n  this.set(\n    1, 0, 0, x,\n    0, 1, 0, y,\n    0, 0, 1, z,\n    0, 0, 0, 1\n  );\n\n  return this;\n\n};\nMatrix4.prototype.multiplyScalar = function (s) {\n\n  const te = this.elements;\n\n  te[0] *= s; te[4] *= s; te[8] *= s; te[12] *= s;\n  te[1] *= s; te[5] *= s; te[9] *= s; te[13] *= s;\n  te[2] *= s; te[6] *= s; te[10] *= s; te[14] *= s;\n  te[3] *= s; te[7] *= s; te[11] *= s; te[15] *= s;\n\n  return this;\n\n};\nMatrix4.prototype.set = function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n\n  const te = this.elements;\n\n  te[0] = n11; te[4] = n12; te[8] = n13; te[12] = n14;\n  te[1] = n21; te[5] = n22; te[9] = n23; te[13] = n24;\n  te[2] = n31; te[6] = n32; te[10] = n33; te[14] = n34;\n  te[3] = n41; te[7] = n42; te[11] = n43; te[15] = n44;\n\n  return this;\n\n};\n\nMatrix4.prototype.makeScale = function (x, y, z) {\n\n  this.set(\n    x, 0, 0, 0,\n    0, y, 0, 0,\n    0, 0, z, 0,\n    0, 0, 0, 1\n  );\n\n  return this;\n\n};\n\nexport default Matrix4;\n","import Vector3 from './vector3.js';\nimport { clamp } from './math.js';\n\n// Copied from THREE.JS\n/**\n * @author bhouston / http://exocortex.com\n */\n\n\nclass Line3 {\n  constructor (start, end) {\n\n    this.start = (start !== undefined) ? start : new Vector3();\n    this.end = (end !== undefined) ? end : new Vector3();\n\n  }\n\n  set (start, end) {\n\n    this.start.copy(start);\n    this.end.copy(end);\n\n    return this;\n\n  }\n\n  copy (line) {\n\n    this.start.copy(line.start);\n    this.end.copy(line.end);\n\n    return this;\n\n  }\n\n  center (optionalTarget) {\n\n    const result = optionalTarget || new Vector3();\n\n\n    return result.addVectors(this.start, this.end).multiplyScalar(0.5);\n\n  }\n\n  delta (optionalTarget) {\n\n    const result = optionalTarget || new Vector3();\n\n\n    return result.subVectors(this.end, this.start);\n\n  }\n\n  distanceSq () {\n\n    return this.start.distanceToSquared(this.end);\n\n  }\n\n  distance () {\n\n    return this.start.distanceTo(this.end);\n\n  }\n\n  at (t, optionalTarget) {\n\n    const result = optionalTarget || new Vector3();\n\n    return this.delta(result).multiplyScalar(t).add(this.start);\n\n  }\n\n  closestPointToPointParameter (point, clampToLine) {\n\n    const startP = new Vector3();\n    const startEnd = new Vector3();\n\n    startP.subVectors(point, this.start);\n    startEnd.subVectors(this.end, this.start);\n\n    const startEnd2 = startEnd.dot(startEnd);\n    const startEnd_startP = startEnd.dot(startP);\n\n    let t = startEnd_startP / startEnd2;\n\n    if (clampToLine) {\n      t = clamp(t, 0, 1);\n    }\n\n    return t;\n\n  }\n\n  closestPointToPoint (point, clampToLine, optionalTarget) {\n\n    const t = this.closestPointToPointParameter(point, clampToLine);\n\n    const result = optionalTarget || new Vector3();\n\n    return this.delta(result).multiplyScalar(t).add(this.start);\n\n  }\n\n  applyMatrix4 (matrix) {\n\n    this.start.applyMatrix4(matrix);\n    this.end.applyMatrix4(matrix);\n\n    return this;\n\n  }\n\n  equals (line) {\n\n    return line.start.equals(this.start) && line.end.equals(this.end);\n\n  }\n\n  clone () {\n\n    return new Line3().copy(this);\n\n  }\n\n  intersectLine (line) {\n    // http://stackoverflow.com/questions/2316490/the-algorithm-to-find-the-point-of-intersection-of-two-3d-line-segment/10288710#10288710\n    const da = this.end.clone().sub(this.start);\n    const db = line.end.clone().sub(line.start);\n    const dc = line.start.clone().sub(this.start);\n\n    const daCrossDb = da.clone().cross(db);\n    const dcCrossDb = dc.clone().cross(db);\n\n    // Lines are not coplanar, stop here\n    if (dc.dot(da) === 0) {\n      return;\n    }\n\n    const s = dcCrossDb.dot(daCrossDb) / daCrossDb.lengthSq();\n\n    // Make sure we have an intersection\n    if (s > 1.0 || isNaN(s)) {\n      return;\n    }\n\n    const intersection = this.start.clone().add(da.clone().multiplyScalar(s));\n    const distanceTest = intersection.clone().sub(line.start).lengthSq() + intersection.clone().sub(line.end).lengthSq();\n\n    if (distanceTest <= line.distanceSq()) {\n      return intersection;\n    }\n\n    return;\n  }\n}\n\nexport default Line3;\n","import { default as Line3 } from './Line3.js';\nimport { default as lineSegment } from './lineSegment.js';\nimport { clamp,\n  degToRad,\n  radToDeg,\n  sign } from './math.js';\n\nimport { default as Matrix4 } from './matrix4.js';\nimport { default as Plane } from './plane.js';\nimport { default as point } from './point.js';\nimport { default as quaternion } from './quaternion.js';\nimport { default as rect } from './rect.js';\nimport { default as Vector3 } from './vector3.js';\n\nconst cornerstoneMath = {\n  Line3,\n  lineSegment,\n  clamp,\n  degToRad,\n  radToDeg,\n  sign,\n  Matrix4,\n  Plane,\n  point,\n  quaternion,\n  rect,\n  Vector3\n};\n\nexport {\n  Line3,\n  lineSegment,\n  clamp,\n  degToRad,\n  radToDeg,\n  sign,\n  Matrix4,\n  Plane,\n  point,\n  quaternion,\n  rect,\n  Vector3\n};\n\nexport default cornerstoneMath;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}